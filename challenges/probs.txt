Perfeito ‚ö°! Mantive os enunciados originais, mas adicionei exemplos de **entradas poss√≠veis** para cada problema (sem colocar sa√≠da para n√£o dar spoiler da resolu√ß√£o). Assim fica no esp√≠rito de treino de maratona:

---

### 1. Contagem de Vogais

Dada uma string, conte quantas vogais (`a, e, i, o, u`) existem nela. A sa√≠da deve ser apenas um n√∫mero inteiro.

**Entrada exemplo:**

```
programacao
```

---

### 2. Pal√≠ndromo Simples

Leia uma string e verifique se ela √© um pal√≠ndromo (igual lida de frente para tr√°s e de tr√°s para frente). Escreva "SIM" se for, ou "NAO" caso contr√°rio.

**Entrada exemplo:**

```
arara
```

---

### 3. Mai√∫sculas e Min√∫sculas

Receba uma string e imprima duas novas vers√µes:

1. Toda em letras mai√∫sculas.
2. Toda em letras min√∫sculas.

**Entrada exemplo:**

```
Python
```

---

### 4. Primeira Letra de Cada Palavra

Receba uma frase e imprima apenas a **primeira letra de cada palavra**, todas juntas sem espa√ßos.

**Entrada exemplo:**

```
Maratona de Programacao
```

---

### 5. Quantidade de Palavras

Dada uma frase, conte e exiba quantas palavras ela possui. Considere que as palavras est√£o separadas por espa√ßos.

**Entrada exemplo:**

```
Eu gosto de programar em Python
```

---

### 6. Substring Procurada

Leia uma string `S` e uma string `P`. Informe se `P` aparece dentro de `S`.
Imprima "SIM" ou "NAO".

**Entrada exemplo:**

```
computador  
put
```

---

### 7. Invertendo String

Leia uma string e imprima sua forma invertida (de tr√°s para frente).

**Entrada exemplo:**

```
abacaxi
```

---

### 8. Compara√ß√£o Lexicogr√°fica

Receba duas strings e determine qual delas vem primeiro na ordem alfab√©tica. Caso sejam iguais, imprima "IGUAIS".

**Entrada exemplo:**

```
banana  
abacate
```

---

### 9. Substituir Vogais

Dada uma string, substitua todas as vogais (`a, e, i, o, u`) pelo caractere `*` e exiba o resultado.

**Entrada exemplo:**

```
elefante
```

---

### 10. Senha Forte?

Dada uma string representando uma senha, verifique se ela cont√©m:

* pelo menos 1 letra mai√∫scula,
* pelo menos 1 letra min√∫scula,
* pelo menos 1 d√≠gito num√©rico.

Imprima "FORTE" se atender a todos os requisitos, ou "FRACA" caso contr√°rio.

**Entrada exemplo:**

```
Python123
```

---

üëâ Quer que eu tamb√©m adicione **sa√≠das esperadas** para cada exemplo (bem no estilo beecrowd, Entrada ‚Üí Sa√≠da), ou voc√™ prefere s√≥ com os inputs para n√£o influenciar na hora de resolver?
